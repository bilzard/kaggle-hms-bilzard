hydra:
  run:
    dir: ${env.working_dir}/${job_name}/${exp_name}/fold_${fold}/seed_${seed}
  sweep:
    dir: ${env.working_dir}/multirun/${job_name}
    subdir: ${hydra.job.override_dirname}
  job:
    name: ${job_name}
    chdir: true
    config:
      override_dirname:
        exclude_keys:
          - job_name
          - verbose
          - debug
          - description
          - wandb.project
          - wandb.mode
          - dry_run
          - trainer.save_last
          - trainer.save_best

defaults:
  - env: local
  - preprocess: with_cqf
  - split: gkfold5
  - trainer/optimizer: adamw
  - trainer/pseudo_label: without_pl
  - architecture/model/sample_collator: simple_collator
  - architecture/model/feature_extractor: wave2spec_128x32
  - architecture/model/consistency_regularizer: identity
  - architecture/model/encoder: timm_encoder
  - architecture/model/decoder: pick_last
  - architecture/model/sample_aggregator: mean_aggregator
  - architecture/model/feature_processor: identity
  - architecture/model/head: simple_head
  - _self_

trainer:
  epochs: 4
  lr: 1e-3
  lr_adjustments:
    - pattern: ^encoder
      ratio: 1.0
  weight_decay: 0.0
  batch_size: 32
  save_last: true
  save_best: false
  duration: 2048
  population_threshold: 0
  val:
    batch_size: 32
    duration: 2048
    stride: 1024
    aggregation_fn: max
    agg_policy: per_eeg_weighted
    seed: 123
    population_threshold: 0
  scheduler:
    warmup_ratio: 0.0
  data:
    target_key: label
    pred_key: pred
    weight_key: weight
    input_keys: [eeg, cqf]
  transform: null
  num_samples_per_eeg: 1
  log_file_name: train_pipeline.txt
  random_seed_offset: 127458
  train_dataset:
    _target_: src.dataset.eeg.UniformSamplingEegDataset
  valid_dataset:
    _target_: src.dataset.eeg.SlidingWindowEegDataset
  label:
    diversity_power: 0.0
    population_power: 1.0
    max_votes: 28


architecture:
  model:
    spec_transform: null
    adapters:
      - _target_: src.model.adapter.WeightedMeanStackingAggregator
      - _target_: src.model.adapter.ResizeTransform
        scale_factor: [2.0, 8.0]
    bg_adapters: []
    merger: null
    encoder:
      name: efficientnet_b0
  model_class:
    _target_: src.model.hms_model.HmsModel
  model_checker:
    _target_: src.model.hms_model.hms_model.check_model
  in_channels: 5
  out_channels: 6
  recover_dual: false
  use_lr_feature: true
  use_similarity_feature: false
  hidden_dim: 64
  input_mask: false
  use_bg_spec: false
  lr_mapping_type: identity
  spec_cropped_duration: 256
  bg_spec_mask_value: 1.0

infer:
  batch_size: 32
  num_samples: 2640
  model_choice: last
  log_name: infer_pipeline.txt
  tta_iterations: 1
  tta: null
  test_dataset:
    _target_: src.dataset.eeg.PerEegSubsampleDataset
    num_samples_per_eeg: 1
    duration: 2048

wandb:
  project: kaggle-hms
  mode: online

job_name: ???
exp_name: ???
description: ???
fold: ???
seed: ???
phase: train # train or test
dry_run: false
debug: false
cleanup: true
final_submission: false
check_only: false
